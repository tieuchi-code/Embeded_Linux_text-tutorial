In this instruction we wil blink the default LED on the BBB using userspace application (not driver)
Frist boot your image (default tisdk image) to the board
-> Login -> cd sys/class/leds

the systems is using led0, led1, so we have user led 2,led 3
-> cd beaglebone:green:usr2 -> file brightness

/sys/class/leds/beaglebone:green:usr2 

-> cat brightness (read what is in file brightness)
cat brightness           
1                                                       
-> 1 in file brightness -> led on

echo 0 >brightness

-> overwrite 0 to file brightness -> led off

1 -> led on
0 -> led off
----------------------------------------------------------------------------

Now we will write an application on userspace to control led

cd /home/root
vi main.c    (in BBB not have vim -> we use vi)
-----------------------------------------------------
#include <stdio.h>

void main()
{
        printf("start program\n");
        FILE* fp;
        fp = fopen("/sys/class/leds/beaglebone:green:usr2/brightness","w");
        if(fp == 0)
        {
                printf("File open failed");
                return;
        }
        fputs("1",fp);
        fclose(fp);
}
(** write 0/1 to off/on LED)
------------------------------------------------------

#include <stdio.h>

void main()
{
        printf("start program\n");
        FILE* fp;
        fp = fopen("/sys/class/leds/beaglebone:green:usr2/brightness","w");
        if(fp == NULL)
        {
                printf("File open failed");
                return;
        }
        int a;
        printf("on/off : 1/0:");
        scanf("%d",&a);
        fprintf(fp,"%d",a);
        fclose(fp);
}
--------------------------------------------------------------------------------

We write program and build on host PC, using crosscompiler for ARM

source ../../../ti-processor-sdk-linux-am335x-evm-09.03.05.02/linux-devkit/environment-setup-armv7at2hf-neon-oe-linux-gnueabi 

gcc main.c -o Ledcontrol

scp LED_control root@192.168.8.8:/home/root

./LED_control -> led on/off
================================================================================================

This is we are using basic application for control
we have to use linux api (because of many reason)
Boot BBB on

linux provide User API
Open ti-sdk
->boardsuport -> ti-linux-kernel -> include -> upai -> linux

Distinguis (uapi -> linux) and (linux -> uapi)

uapi -> linux: is for user space to build application
linux -> uapi: driver config

Open ti-sdk
->boardsuport -> ti-linux-kernel -> include -> upai -> linux -> gpio.h

gpio.h is library for userspace to build application for linux board
----------------------------------------------

Open BBB
->gpioinfo
this command will show gpiochip 

ls /dev/ -> show device manager

gpiochip0        ptycd  ptyr9  ptyw5  rfkill  ttyS3  ttyea  ttyt6  ttyy2
gpiochip1        ptyce  ptyra  ptyw6  rtc     ttyS4  ttyeb  ttyt7  ttyy3
gpiochip2        ptycf  ptyrb  ptyw7  rtc0    ttya0  ttyec  ttyt8  ttyy4
gpiochip3        ptyd0  ptyrc  ptyw8  shm     ttya1  ttyed  ttyt9  ttyy5
-----------------------------------------------

Open Project led control
#include <stdio.h>
#include <linux/gpio.h>		library for linux
#include <fcntl.h>		library for open function














